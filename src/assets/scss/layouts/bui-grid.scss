// These are the base variables to control the grid system.
$gutters: 15px;
$neg-gutters: -$gutters;
$gridPadding: 30px;
$colSpacing: 5px;
$gridsize: 12; // Grid Sizes must be divisible by two.
$breakpoints: ("xs": 576px, "sm": 768px, "md": 992px, "lg": 1200px);

/* Removes padding behaviour on widths */
*, *:before, *:after {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

/* Grid Container */
.grid, .grid-fw {
  width: 100%;
  margin: 0 auto;
  padding:  0 $gridPadding;
}

/* Row Clearfix */
.row {
  margin:0 0 0 ($neg-gutters / 2);
  &:after {
    content: " ";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }
}

/* Column attribute selector */
[class*='col-'] {
  position: relative;
  float: left;
  display: block;
  margin-bottom: $colSpacing;
  width: 100%;
  padding-right: ($gutters / 2);
  padding-left:  ($gutters / 2);
  min-height: 1px;
}

/* Floats last ".col-" to the right */
// [class*='col-']:last-of-type {
//   padding-right: 0;
// }

/* Removes floats on mobile phones */
// @media (max-width: 419px) {
//   [class*='col-'] {
//     padding-right: 0;
//   }
// }

@each $mqSlug, $size in $breakpoints {
  @media (min-width: #{$size}) {
    .grid {
    width: -webkit-calc( #{$size} - 60px);
	  width:    -moz-calc( #{$size} - 60px);
	  width:         calc( #{$size} - 60px);
    }
  }
}

//Columns, Columns Offsets, and Thier Breakpoints
@each $mqSlug, $size in $breakpoints {
  @media (min-width: #{$size}) {
    @for $colNumb from 1 through $gridsize {
      .col-#{$colNumb}#{$mqSlug} {
        width: $colNumb / $gridsize * 100%;
      }
      .offset-#{$colNumb}#{$mqSlug} {
        margin-left: $colNumb / $gridsize * 100%;
      }
    }
  }
}
